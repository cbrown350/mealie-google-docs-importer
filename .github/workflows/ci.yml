name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run tests with coverage
        if: always()
        run: npm test -- --coverage

      - name: Get Coverage
        if: always()
        id: coverage
        run: |
          # Check if tests failed
          if [ "${{ job.status }}" == "failure" ]; then
            echo "status=failing" >> $GITHUB_OUTPUT
          else
            echo "status=passing" >> $GITHUB_OUTPUT
          fi
          
          # Check coverage report
          if [ ! -f coverage/coverage-summary.json ]; then
            echo "percentage=0" >> $GITHUB_OUTPUT
          else
            COVERAGE=$(node -p "JSON.parse(require('fs').readFileSync('coverage/coverage-summary.json')).total.lines.pct")
            echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT
          fi

      - name: Create badges directory
        if: always()
        run: mkdir -p .github/badges

      - name: Generate coverage badge
        if: always()
        run: |
          COVERAGE="${{ steps.coverage.outputs.percentage }}"
          if [ "${{ steps.coverage.outputs.status }}" == "failing" ]; then
            COLOR="red"
            TEXT="${COVERAGE}%25\%20(failing)"
          else
            COVERAGE_INT=${COVERAGE%.*}
            if [ "$COVERAGE_INT" -ge 80 ]; then
              COLOR="brightgreen"
            elif [ "$COVERAGE_INT" -ge 70 ]; then
              COLOR="yellow"
            else
              COLOR="red"
            fi
            TEXT="${COVERAGE}%25"
          fi

          curl -o .github/badges/coverage.svg \
          "https://img.shields.io/badge/coverage-${TEXT}-${COLOR}"

      - name: Upload coverage reports to GitHub
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Commit and push badge to badges branch
        if: always() && github.ref == 'refs/heads/master'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Save current coverage and badge files
          mkdir -p /tmp/coverage-backup
          cp -r coverage/* /tmp/coverage-backup/ || exit 0
          mkdir -p /tmp/badges-backup
          cp -r .github/badges/* /tmp/badges-backup/
          
          # Switch to badges branch
          git fetch
          git checkout badges 2>/dev/null || git checkout -b badges
          
          # Clean and restore files
          git rm -rf . || true
          git clean -fxd
          mkdir -p .github/badges coverage
          cp -r /tmp/coverage-backup/* coverage/ || exit 0
          cp -r /tmp/badges-backup/* .github/badges/
          
          # Commit and force push
          git add -f .github/badges/coverage.svg
          git add -f coverage/ || exit 0
          git commit -m "Update coverage badge and reports" || exit 0
          git push -f origin badges